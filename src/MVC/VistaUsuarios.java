/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package MVC;

import Controlador.Conexiones;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import MVC.VistaAgencias;
import MVC.VistaClientes;
import MVC.VistaCompanias;
import MVC.VistaMedios;
import MVC.VistaOperadores;
import MVC.VistaPaquetes;
import MVC.VistaPromotores;
import MVC.VistaTiposMedios;
import MVC.VistaTiposTransportes;
import MVC.VistaUsuarios;
import MVC.VistaVehiculo;
import Modelo.Agencias;
import Modelo.Clientes;
import Modelo.Companias;
import Modelo.Paquetes;
import javax.swing.JFrame;
/**
 *
 * @author APRENDIZ
 */
public class VistaUsuarios extends javax.swing.JFrame {

   public int seleccion;
   public String mensaje;
   public String primaryKey;
   public String nombreTabla;
   
    
    public VistaUsuarios() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblvisor = new javax.swing.JTable();
        btnClientes = new javax.swing.JButton();
        btnvehiculos = new javax.swing.JButton();
        btnagregar = new javax.swing.JButton();
        btnpaquetes = new javax.swing.JButton();
        btnagencias = new javax.swing.JButton();
        btncompanias = new javax.swing.JButton();
        btnmedios = new javax.swing.JButton();
        btnoperadores = new javax.swing.JButton();
        btnpromotores = new javax.swing.JButton();
        btntipomedios = new javax.swing.JButton();
        btntipotransporte = new javax.swing.JButton();
        btnquitar = new javax.swing.JButton();
        btnagregar1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblvisor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tblvisor);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 1420, -1));

        btnClientes.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnClientes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MVC/10729125.png"))); // NOI18N
        btnClientes.setText("Clientes");
        btnClientes.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnClientes.setPreferredSize(new java.awt.Dimension(50, 50));
        btnClientes.setRolloverEnabled(false);
        btnClientes.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        btnClientes.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClientesActionPerformed(evt);
            }
        });
        jPanel1.add(btnClientes, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 90, 80));

        btnvehiculos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MVC/2555021.png"))); // NOI18N
        btnvehiculos.setText("Vehiculos");
        btnvehiculos.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnvehiculos.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        btnvehiculos.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnvehiculos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnvehiculosActionPerformed(evt);
            }
        });
        jPanel1.add(btnvehiculos, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 30, 90, 80));

        btnagregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MVC/8201360_add_plus_new_ui_icon.png"))); // NOI18N
        btnagregar.setText("Agregar");
        btnagregar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnagregar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnagregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnagregarActionPerformed(evt);
            }
        });
        jPanel1.add(btnagregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1170, 30, 80, 80));

        btnpaquetes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MVC/3440901_box_carton_delivery_ecommerce_package_icon.png"))); // NOI18N
        btnpaquetes.setText("Paquetes");
        btnpaquetes.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnpaquetes.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnpaquetes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnpaquetesActionPerformed(evt);
            }
        });
        jPanel1.add(btnpaquetes, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 30, 90, 80));

        btnagencias.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MVC/3896344 (1).png"))); // NOI18N
        btnagencias.setText("Agencias");
        btnagencias.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnagencias.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnagencias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnagenciasActionPerformed(evt);
            }
        });
        jPanel1.add(btnagencias, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 30, 90, 80));

        btncompanias.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MVC/5574644 (1).png"))); // NOI18N
        btncompanias.setText("Compa√±ias");
        btncompanias.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btncompanias.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btncompanias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncompaniasActionPerformed(evt);
            }
        });
        jPanel1.add(btncompanias, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 30, 90, 80));

        btnmedios.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MVC/advertising_17844586.png"))); // NOI18N
        btnmedios.setText("Medios");
        btnmedios.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnmedios.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnmedios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnmediosActionPerformed(evt);
            }
        });
        jPanel1.add(btnmedios, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 30, 90, 80));

        btnoperadores.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MVC/7981453 (1).png"))); // NOI18N
        btnoperadores.setText("Operadores");
        btnoperadores.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnoperadores.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnoperadores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnoperadoresActionPerformed(evt);
            }
        });
        jPanel1.add(btnoperadores, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 30, 100, 80));

        btnpromotores.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MVC/8252103 (1).png"))); // NOI18N
        btnpromotores.setText("Promotores");
        btnpromotores.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnpromotores.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnpromotores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnpromotoresActionPerformed(evt);
            }
        });
        jPanel1.add(btnpromotores, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 30, 100, 80));

        btntipomedios.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MVC/2323154 (1).png"))); // NOI18N
        btntipomedios.setText("Tipos Medios");
        btntipomedios.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btntipomedios.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btntipomedios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntipomediosActionPerformed(evt);
            }
        });
        jPanel1.add(btntipomedios, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 30, 110, 80));

        btntipotransporte.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MVC/743902 (1).png"))); // NOI18N
        btntipotransporte.setText("Tipos Transportes");
        btntipotransporte.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btntipotransporte.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btntipotransporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntipotransporteActionPerformed(evt);
            }
        });
        jPanel1.add(btntipotransporte, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 30, 130, 80));

        btnquitar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MVC/8664938_trash_can_delete_remove_icon.png"))); // NOI18N
        btnquitar.setText("Borrar");
        btnquitar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnquitar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnquitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnquitarActionPerformed(evt);
            }
        });
        jPanel1.add(btnquitar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1360, 30, 70, 80));

        btnagregar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MVC/8201360_add_plus_new_ui_icon.png"))); // NOI18N
        btnagregar1.setText("Actualizar");
        btnagregar1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnagregar1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnagregar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnagregar1ActionPerformed(evt);
            }
        });
        jPanel1.add(btnagregar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1260, 30, 90, 80));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1448, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 617, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClientesActionPerformed
        seleccion = 1;
        primaryKey = "id";
        nombreTabla = "tblclientes";
        mostrarClientes("tblclientes");
        

    }//GEN-LAST:event_btnClientesActionPerformed

    private void btnvehiculosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnvehiculosActionPerformed
        seleccion = 2;
        primaryKey = "matricula";
        nombreTabla = "tblvehiculo";
        mostrarVehiculos("tblvehiculo");
    }//GEN-LAST:event_btnvehiculosActionPerformed

    private void btnpaquetesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnpaquetesActionPerformed
        seleccion = 3;
        primaryKey = "codigo";
        nombreTabla = "tblpaquetes";
        mostrarPaquetes("tblpaquetes");
    }//GEN-LAST:event_btnpaquetesActionPerformed

    private void btnagenciasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnagenciasActionPerformed
        seleccion = 4;
        primaryKey = "idagencia";
        nombreTabla = "tblagencias";
        mostrarAgencias("tblagencias");

    }//GEN-LAST:event_btnagenciasActionPerformed

    private void btncompaniasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncompaniasActionPerformed
        seleccion = 5;
        primaryKey = "idcompania";
        nombreTabla = "tblcompanias";
        mostrarCompanias("tblcompanias");

    }//GEN-LAST:event_btncompaniasActionPerformed

    private void btnmediosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnmediosActionPerformed
        seleccion = 6;
        primaryKey = "idmedios";
        nombreTabla = "tblmedios";
        mostrarMedios("tblmedios");

    }//GEN-LAST:event_btnmediosActionPerformed

    private void btnoperadoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnoperadoresActionPerformed
        seleccion = 7;
        primaryKey = "id";
        nombreTabla = "tbloperadores";
        mostrarOperadores("tbloperadores");

    }//GEN-LAST:event_btnoperadoresActionPerformed

    private void btnpromotoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnpromotoresActionPerformed
        seleccion = 8;
        primaryKey = "id";
        nombreTabla = "tblpromotores";
        mostrarPromotores("tblpromotores");

    }//GEN-LAST:event_btnpromotoresActionPerformed

    private void btntipomediosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntipomediosActionPerformed
        seleccion = 9;
        primaryKey = "idtipomedio";
        nombreTabla = "tbltiposmedios";
        mostrarTiposMedios("tbltiposmedios");

    }//GEN-LAST:event_btntipomediosActionPerformed

    private void btntipotransporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntipotransporteActionPerformed
        seleccion = 10;
        primaryKey = "idtipo";
        nombreTabla = "tbltipotransporte";
        mostrarTiposTransporte("tbltipotransporte");

    }//GEN-LAST:event_btntipotransporteActionPerformed

    private void btnagregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnagregarActionPerformed
        
        VistaAgencias vistaAgencias = new VistaAgencias();
        VistaClientes vistaClientes = new VistaClientes();
        VistaCompanias vistaCompanias = new VistaCompanias();
        VistaMedios vistaMedios = new VistaMedios();
        VistaOperadores vistaOperadores = new VistaOperadores();
        VistaPaquetes vistaPaquetes = new VistaPaquetes();
        VistaPromotores vistaPromotores = new VistaPromotores();
        VistaTiposMedios vistaTiposMedios = new VistaTiposMedios();
        VistaTiposTransportes vistaTiposTransportes = new VistaTiposTransportes();
        VistaUsuarios vistaUsuarios = new VistaUsuarios();
        VistaVehiculo vistaVehiculo = new VistaVehiculo();
        
            if(seleccion != 0){
        switch (seleccion) {
            case 1 -> {
                vistaClientes.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                vistaClientes.setVisible(true);      
            }
            case 2 -> {
                vistaVehiculo.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                vistaVehiculo.setVisible(true);
            }
            case 3 -> {
                vistaPaquetes.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                vistaPaquetes.setVisible(true);
            }
            case 4 -> {
                vistaAgencias.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                vistaAgencias.setVisible(true);
            }
            case 5 -> {
                vistaCompanias.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                vistaCompanias.setVisible(true);
            }
            case 6 -> {
                vistaMedios.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                vistaMedios.setVisible(true);
            }
            case 7 -> {
                vistaOperadores.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                vistaOperadores.setVisible(true);
            }
            case 8 -> {
                vistaPromotores.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                vistaPromotores.setVisible(true);
            }
            case 9 -> {
                vistaTiposMedios.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                vistaTiposMedios.setVisible(true);
            }
            case 10 -> {
                vistaTiposTransportes.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                vistaTiposTransportes.setVisible(true);
            }
        }
    }
            
    }//GEN-LAST:event_btnagregarActionPerformed
    
       
    private void btnquitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnquitarActionPerformed
    if(seleccion != 0){
    String idBorrar = JOptionPane.showInputDialog("Escriba el ID a borrar");
        
        if(idBorrar != null){      
        switch(seleccion){
    
        case 1 -> mensaje = "Desea borrar de la tabla clientes el ID: " + idBorrar;
        case 2 -> mensaje = "Desea borrar de la tabla vehiculos el ID: " + idBorrar;
        case 3 -> mensaje = "Desea borrar de la tabla paquetes el ID: " + idBorrar;
        case 4 -> mensaje = "Desea borrar de la tabla agencias el ID: " + idBorrar;
        case 5 -> mensaje = "Desea borrar de la tabla compa√±ias el ID: " + idBorrar;
        case 6 -> mensaje = "Desea borrar de la tabla medios el ID: " + idBorrar;
        case 7 -> mensaje = "Desea borrar de la tabla operadores el ID: " + idBorrar;
        case 8 -> mensaje = "Desea borrar de la tabla promotores el ID: " + idBorrar;
        case 9 -> mensaje = "Desea borrar de la tabla tipo de medios el ID: " + idBorrar;
        case 10 -> mensaje = "Desea borrar de la tabla tipo de transportes el ID: " + idBorrar;
    }    
  

        
        int respuesta = JOptionPane.showConfirmDialog(null, mensaje);
         
        if(respuesta == JOptionPane.OK_OPTION){
        
                Conexiones conector = new Conexiones();

            
        Connection dbConnection = null;
        PreparedStatement pst = null;

        String script = "DELETE FROM " + nombreTabla + " WHERE " + primaryKey + " = ?"; 

        try {
            dbConnection = conector.conectarBD();
            pst = dbConnection.prepareStatement(script);

           
        if(seleccion != 2){ 
            pst.setInt(1, Integer.parseInt(idBorrar));
        } else {
            pst.setString(1, idBorrar);
        }
            pst.executeUpdate();

            JOptionPane.showMessageDialog(null, "Exito al borrar.");

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }           
       }
      }
     } 
      switch (seleccion) {
    case 1 -> mostrarClientes("tblclientes");
    case 2 -> mostrarVehiculos("tblvehiculo");
    case 3 -> mostrarPaquetes("tblpaquetes");
    case 4 -> mostrarAgencias("tblagencias");
    case 5 -> mostrarCompanias("tblcompanias");
    case 6 -> mostrarMedios("tblmedios");
    case 7 -> mostrarOperadores("tbloperadores");
    case 8 -> mostrarPromotores("tblpromotores");
    case 9 -> mostrarTiposMedios("tbltiposmedios");
    case 10 -> mostrarTiposTransporte("tbltipotransporte");
}       }//GEN-LAST:event_btnquitarActionPerformed

    private void btnagregar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnagregar1ActionPerformed

        VistaAgencias vistaAgencias = new VistaAgencias();
        VistaClientes vistaClientes = new VistaClientes();
        VistaCompanias vistaCompanias = new VistaCompanias();
        VistaMedios vistaMedios = new VistaMedios();
        VistaOperadores vistaOperadores = new VistaOperadores();
        VistaPaquetes vistaPaquetes = new VistaPaquetes();
        VistaPromotores vistaPromotores = new VistaPromotores();
        VistaTiposMedios vistaTiposMedios = new VistaTiposMedios();
        VistaTiposTransportes vistaTiposTransportes = new VistaTiposTransportes();
        VistaUsuarios vistaUsuarios = new VistaUsuarios();
        VistaVehiculo vistaVehiculo = new VistaVehiculo();
        
        if(seleccion != 0){
        switch (seleccion) {
            case 1 -> {
            int id = Integer.parseInt(JOptionPane.showInputDialog(null, "Ingrese el id de la agencia a editar"));

                vistaClientes.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                
                Clientes cl = new Clientes();
                
                cl.mostrarClienteActualizar(id);
            }
            case 2 -> {
             int id = Integer.parseInt(JOptionPane.showInputDialog(null, "Ingrese el id de la agencia a editar"));

                vistaVehiculo.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                vistaVehiculo.setVisible(true);
            }
            case 3 -> {
             int id = Integer.parseInt(JOptionPane.showInputDialog(null, "Ingrese el id de la agencia a editar"));
                
                vistaPaquetes.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                Paquetes pq = new Paquetes();
                
                pq.mostrarPaqueteActualizar(id);
            }
            case 4 -> {
                int id = Integer.parseInt(JOptionPane.showInputDialog(null, "Ingrese el id de la agencia a editar"));
                        vistaAgencias.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

            Agencias ag = new Agencias();
        
            ag.mostrarAgenciaActualizar(id);
            }
            case 5 -> {
             int id = Integer.parseInt(JOptionPane.showInputDialog(null, "Ingrese el id de la agencia a editar"));
                
                vistaCompanias.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

                Companias cp = new Companias();
                cp.mostrarCompaniaActualizar(id);

            }
            case 6 -> {
             int id = Integer.parseInt(JOptionPane.showInputDialog(null, "Ingrese el id de la agencia a editar"));
                
                vistaMedios.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                vistaMedios.setVisible(true);
            }
            case 7 -> {
             int id = Integer.parseInt(JOptionPane.showInputDialog(null, "Ingrese el id de la agencia a editar"));
                
                vistaOperadores.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                vistaOperadores.setVisible(true);
            }
            case 8 -> {
             int id = Integer.parseInt(JOptionPane.showInputDialog(null, "Ingrese el id de la agencia a editar"));
                
                vistaPromotores.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                vistaPromotores.setVisible(true);
            }
            case 9 -> {
             int id = Integer.parseInt(JOptionPane.showInputDialog(null, "Ingrese el id de la agencia a editar"));
                
                vistaTiposMedios.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                vistaTiposMedios.setVisible(true);
            }
            case 10 -> {
             int id = Integer.parseInt(JOptionPane.showInputDialog(null, "Ingrese el id de la agencia a editar"));
                
                vistaTiposTransportes.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                vistaTiposTransportes.setVisible(true);
            }
        }
    }//GEN-LAST:event_btnagregar1ActionPerformed
    }
    public void mostrarPromotores(String tabla){
    
    String sql = "SELECT * FROM " + tabla;
    Statement st;
    Conexiones con = new Conexiones();
    Connection conexion = con.conectarBD();

    if (conexion == null) {
        JOptionPane.showMessageDialog(null, "Error: No se pudo conectar a la base de datos.");
        return;
    }

    // Definir modelo de la tabla con los nuevos campos
    DefaultTableModel model = new DefaultTableModel();
    model.addColumn("ID");
    model.addColumn("Tipo Documento");
    model.addColumn("Documento");
    model.addColumn("Nombres");
    model.addColumn("Apellidos");
    model.addColumn("Direcci√≥n");
    model.addColumn("Correo");
    model.addColumn("Correo Personal");
    model.addColumn("Correo Corporativo");
    model.addColumn("Fecha Nacimiento");
    model.addColumn("Tel√©fono");
    tblvisor.setModel(model);

    String[] datos = new String[11];

    try {
        st = conexion.createStatement();
        ResultSet rs = st.executeQuery(sql);

        while (rs.next()) {
            datos[0] = String.valueOf(rs.getInt("id"));
            datos[1] = String.valueOf(rs.getInt("tipodocumento"));
            datos[2] = String.valueOf(rs.getInt("documento"));
            datos[3] = rs.getString("nombres");
            datos[4] = rs.getString("apellidos");
            datos[5] = rs.getString("direccion");
            datos[6] = rs.getString("correo");
            datos[7] = rs.getString("correopersonal");
            datos[8] = rs.getString("correocorp");
            datos[9] = String.valueOf(rs.getDate("fechanacimiento"));
            datos[10] = rs.getString("telefono");
            
            model.addRow(datos);
        }

        rs.close();
        st.close();
        conexion.close(); // Cierra la conexi√≥n despu√©s de usarla.

        tblvisor.setModel(model); // Mueve la asignaci√≥n aqu√≠ despu√©s de llenar los datos.

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error: " + e.toString());
    }
}
    
    
    public void mostrarVehiculos(String tabla){
    
String sql = "SELECT * FROM " + tabla;
Statement st;
Conexiones con = new Conexiones();
Connection conexion = con.conectarBD();

if (conexion == null) {
    JOptionPane.showMessageDialog(null, "Error: No se pudo conectar a la base de datos.");
    return;
}

// Definir modelo de la tabla con los nuevos campos
DefaultTableModel model = new DefaultTableModel();
model.addColumn("Matr√≠cula");
model.addColumn("Marca");
model.addColumn("Puestos");
model.addColumn("Modelo");
model.addColumn("N√∫mero de Motor");
model.addColumn("Categor√≠a");
model.addColumn("ID Tipo");
model.addColumn("ID Promotores");
tblvisor.setModel(model);

String[] datos = new String[8];

try {
    st = conexion.createStatement();
    ResultSet rs = st.executeQuery(sql);

    while (rs.next()) {
        datos[0] = rs.getString("matricula");
        datos[1] = rs.getString("marca");
        datos[2] = String.valueOf(rs.getInt("puestos")); // Convertir int a String
        datos[3] = rs.getString("modelo");
        datos[4] = String.valueOf(rs.getInt("numeromotor")); // Convertir int a String
        datos[5] = rs.getString("categoria");
        datos[6] = String.valueOf(rs.getInt("idtipo")); // Convertir int a String
        datos[7] = String.valueOf(rs.getInt("idpromotores")); // Convertir int a String

        model.addRow(datos);
    }

    rs.close();
    st.close();
    conexion.close(); // Cierra la conexi√≥n despu√©s de usarla.

    tblvisor.setModel(model); // Mueve la asignaci√≥n aqu√≠ despu√©s de llenar los datos.

} catch (SQLException e) {
    JOptionPane.showMessageDialog(null, "Error: " + e.toString());
}

        
    }
    
    public void mostrarAgencias(String tabla){
    
    String sql = "SELECT * FROM " + tabla;
    Statement st;
    Conexiones con = new Conexiones();
    Connection conexion = con.conectarBD();

    if (conexion == null) {
        JOptionPane.showMessageDialog(null, "Error: No se pudo conectar a la base de datos.");
        return;
    }

    // Definir modelo de la tabla con los nuevos campos
    DefaultTableModel model = new DefaultTableModel();
    model.addColumn("ID Agencia");
    model.addColumn("Nombre");
    model.addColumn("Direcci√≥n");
    model.addColumn("Correo");
    model.addColumn("Tel√©fono");
    model.addColumn("Web");
    model.addColumn("ID Compa√±√≠a");
    tblvisor.setModel(model);

    String[] datos = new String[7];

    try {
        st = conexion.createStatement();
        ResultSet rs = st.executeQuery(sql);

        while (rs.next()) {
            datos[0] = String.valueOf(rs.getInt("idagencia")); // Convertir int a String
            datos[1] = rs.getString("nombre");
            datos[2] = rs.getString("direccion");
            datos[3] = rs.getString("correo");
            datos[4] = rs.getString("telefono");
            datos[5] = rs.getString("web");
            datos[6] = String.valueOf(rs.getInt("idcompania")); // Convertir int a String
            
            model.addRow(datos);
        }

        rs.close();
        st.close();
        conexion.close(); // Cierra la conexi√≥n despu√©s de usarla.

        tblvisor.setModel(model); // Mueve la asignaci√≥n aqu√≠ despu√©s de llenar los datos.

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error: " + e.toString());
    }
}
    
    public void mostrarCompanias(String tabla){
    
    String sql = "SELECT * FROM " + tabla;
    Statement st;
    Conexiones con = new Conexiones();
    Connection conexion = con.conectarBD();

    if (conexion == null) {
        JOptionPane.showMessageDialog(null, "Error: No se pudo conectar a la base de datos.");
        return;
    }

    // Definir modelo de la tabla con los nuevos campos
    DefaultTableModel model = new DefaultTableModel();
    model.addColumn("Raz√≥n Social");
    model.addColumn("ID Compa√±√≠a");
    model.addColumn("Direcci√≥n");
    model.addColumn("Correo");
    model.addColumn("Tel√©fono");
    model.addColumn("Web");
    model.addColumn("Fecha de Creaci√≥n");
    tblvisor.setModel(model);

    String[] datos = new String[7];

    try {
        st = conexion.createStatement();
        ResultSet rs = st.executeQuery(sql);

        while (rs.next()) {
            datos[0] = rs.getString("razonsocial");
            datos[1] = String.valueOf(rs.getInt("idcompania")); // Convertir int a String
            datos[2] = rs.getString("direccion");
            datos[3] = rs.getString("correo");
            datos[4] = rs.getString("telefono");
            datos[5] = rs.getString("web");
            datos[6] = rs.getString("fechacreacion");
            
            model.addRow(datos);
        }

        rs.close();
        st.close();
        conexion.close(); // Cierra la conexi√≥n despu√©s de usarla.

        tblvisor.setModel(model); // Mueve la asignaci√≥n aqu√≠ despu√©s de llenar los datos.

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error: " + e.toString());
    }
}
    
    public void mostrarMedios(String tabla){
    
    String sql = "SELECT * FROM " + tabla;
    Statement st;
    Conexiones con = new Conexiones();
    Connection conexion = con.conectarBD();

    if (conexion == null) {
        JOptionPane.showMessageDialog(null, "Error: No se pudo conectar a la base de datos.");
        return;
    }

    // Definir modelo de la tabla con los nuevos campos
    DefaultTableModel model = new DefaultTableModel();
    model.addColumn("ID Medios");
    model.addColumn("Nombre");
    model.addColumn("Observaci√≥n");
    model.addColumn("ID Tipo Medio");
    tblvisor.setModel(model);

    String[] datos = new String[4];

    try {
        st = conexion.createStatement();
        ResultSet rs = st.executeQuery(sql);

        while (rs.next()) {
            datos[0] = String.valueOf(rs.getInt("idmedios")); // Convertir int a String
            datos[1] = rs.getString("nombre");
            datos[2] = rs.getString("observacion");
            datos[3] = String.valueOf(rs.getInt("idtipomedio")); // Convertir int a String
            
            model.addRow(datos);
        }

        rs.close();
        st.close();
        conexion.close(); // Cierra la conexi√≥n despu√©s de usarla.

        tblvisor.setModel(model); // Mueve la asignaci√≥n aqu√≠ despu√©s de llenar los datos.

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error: " + e.toString());
    }
}

    public void mostrarOperadores(String tabla){
    
    String sql = "SELECT * FROM " + tabla;
    Statement st;
    Conexiones con = new Conexiones();
    Connection conexion = con.conectarBD();

    if (conexion == null) {
        JOptionPane.showMessageDialog(null, "Error: No se pudo conectar a la base de datos.");
        return;
    }

    // Definir modelo de la tabla con los nuevos campos
    DefaultTableModel model = new DefaultTableModel();
    model.addColumn("ID");
    model.addColumn("Tipo Documento");
    model.addColumn("Documento");
    model.addColumn("Nombres");
    model.addColumn("Apellidos");
    model.addColumn("Direcci√≥n");
    model.addColumn("Correo");
    model.addColumn("Tel√©fono");
    tblvisor.setModel(model);

    String[] datos = new String[8];

    try {
        st = conexion.createStatement();
        ResultSet rs = st.executeQuery(sql);

        while (rs.next()) {
            datos[0] = String.valueOf(rs.getInt("id")); // Convertir int a String
            datos[1] = String.valueOf(rs.getInt("tipodocumento"));
            datos[2] = String.valueOf(rs.getInt("documento"));
            datos[3] = rs.getString("nombres");
            datos[4] = rs.getString("apellidos");
            datos[5] = rs.getString("direccion");
            datos[6] = rs.getString("correo");
            datos[7] = rs.getString("telefono");
            
            model.addRow(datos);
        }

        rs.close();
        st.close();
        conexion.close(); // Cierra la conexi√≥n despu√©s de usarla.

        tblvisor.setModel(model); // Mueve la asignaci√≥n aqu√≠ despu√©s de llenar los datos.

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error: " + e.toString());
    }
}
    
    public void mostrarTiposMedios(String tabla){
    
    String sql = "SELECT * FROM " + tabla;
    Statement st;
    Conexiones con = new Conexiones();
    Connection conexion = con.conectarBD();

    if (conexion == null) {
        JOptionPane.showMessageDialog(null, "Error: No se pudo conectar a la base de datos.");
        return;
    }

    // Definir modelo de la tabla con los nuevos campos
    DefaultTableModel model = new DefaultTableModel();
    model.addColumn("ID Tipo Medio");
    model.addColumn("Nombre");
    model.addColumn("Observaci√≥n");
    tblvisor.setModel(model);

    String[] datos = new String[3];

    try {
        st = conexion.createStatement();
        ResultSet rs = st.executeQuery(sql);

        while (rs.next()) {
            datos[0] = String.valueOf(rs.getInt("idtipomedio"));
            datos[1] = rs.getString("nombre");
            datos[2] = rs.getString("observacion");
            
            model.addRow(datos);
        }

        rs.close();
        st.close();
        conexion.close(); // Cierra la conexi√≥n despu√©s de usarla.

        tblvisor.setModel(model); // Mueve la asignaci√≥n aqu√≠ despu√©s de llenar los datos.

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error: " + e.toString());
    }
}
    
    public void mostrarTiposTransporte(String tabla){
    
    String sql = "SELECT * FROM " + tabla;
    Statement st;
    Conexiones con = new Conexiones();
    Connection conexion = con.conectarBD();

    if (conexion == null) {
        JOptionPane.showMessageDialog(null, "Error: No se pudo conectar a la base de datos.");
        return;
    }

    // Definir modelo de la tabla con los nuevos campos
    DefaultTableModel model = new DefaultTableModel();
    model.addColumn("ID Tipo Transporte");
    model.addColumn("Nombre");
    model.addColumn("Observaci√≥n");
    tblvisor.setModel(model);

    String[] datos = new String[3];

    try {
        st = conexion.createStatement();
        ResultSet rs = st.executeQuery(sql);

        while (rs.next()) {
            datos[0] = String.valueOf(rs.getInt("idtipo"));
            datos[1] = rs.getString("nombre");
            datos[2] = rs.getString("observacion");
            
            model.addRow(datos);
        }

        rs.close();
        st.close();
        conexion.close(); // Cierra la conexi√≥n despu√©s de usarla.

        tblvisor.setModel(model); // Mueve la asignaci√≥n aqu√≠ despu√©s de llenar los datos.

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error: " + e.toString());
    }
}
    
   
    public void mostrarPaquetes(String tabla){
    
    String sql = "SELECT * FROM " + tabla;
    Statement st;
    Conexiones con = new Conexiones();
    Connection conexion = con.conectarBD();

    if (conexion == null) {
        JOptionPane.showMessageDialog(null, "Error: No se pudo conectar a la base de datos.");
        return;
    }

    // Definir modelo de la tabla con los nuevos campos
    DefaultTableModel model = new DefaultTableModel();
    model.addColumn("C√≥digo");
    model.addColumn("ID Destino");
    model.addColumn("ID Origen");
    model.addColumn("Fecha Venta");
    model.addColumn("Hora Venta");
    model.addColumn("Hora Salida");
    model.addColumn("Fecha Ejecuci√≥n");
    model.addColumn("Observaci√≥n");
    model.addColumn("ID Cliente");
    model.addColumn("ID Agencia");
    model.addColumn("ID Medio");
    model.addColumn("ID Operadores");
    model.addColumn("Matr√≠cula");
    model.addColumn("Precios");
    tblvisor.setModel(model);

    String[] datos = new String[14];

    try {
        st = conexion.createStatement();
        ResultSet rs = st.executeQuery(sql);

        while (rs.next()) {
            datos[0] = String.valueOf(rs.getInt("codigo"));
            datos[1] = String.valueOf(rs.getInt("iddestino"));
            datos[2] = String.valueOf(rs.getInt("idorigen"));
            datos[3] = rs.getString("fechaventa");
            datos[4] = rs.getString("horaventa");
            datos[5] = rs.getString("horasalida");
            datos[6] = rs.getString("fechaejecucion");
            datos[7] = rs.getString("observacion");
            datos[8] = String.valueOf(rs.getInt("idcliente"));
            datos[9] = String.valueOf(rs.getInt("idagencia"));
            datos[10] = String.valueOf(rs.getInt("idmedio"));
            datos[11] = String.valueOf(rs.getInt("idoperadores"));
            datos[12] = rs.getString("matricula");
            datos[13] = rs.getString("precios");
            
            model.addRow(datos);
        }

        rs.close();
        st.close();
        conexion.close(); // Cierra la conexi√≥n despu√©s de usarla.

        tblvisor.setModel(model); // Mueve la asignaci√≥n aqu√≠ despu√©s de llenar los datos.

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error: " + e.toString());
    }
}
    
    public void mostrarClientes(String tabla) {

        String sql = "SELECT * FROM " + tabla;
        Statement st;
        Conexiones con = new Conexiones();
        Connection conexion = con.conectarBD();

        if (conexion == null) {
            JOptionPane.showMessageDialog(null, "Error: No se pudo conectar a la base de datos.");
            return;
        }

        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("id");
        model.addColumn("tipodocumento");
        model.addColumn("documento");
        model.addColumn("nombres");
        model.addColumn("apellidos");
        model.addColumn("Eps");
        model.addColumn("alergias");
        model.addColumn("fecha de nacimiento");
        model.addColumn("correo");
        model.addColumn("estado civil");
        model.addColumn("telefono");
        model.addColumn("direccion");
        tblvisor.setModel(model);

        String[] datos = new String[12];

        try {
            st = conexion.createStatement();
            ResultSet rs = st.executeQuery(sql);

            while (rs.next()) {
                datos[0] = rs.getString(1);
                String tipoDocumento = rs.getString(2);
                if (tipoDocumento.equals("1")) {
                    datos[1] = "C√©dula";
                } else if (tipoDocumento.equals("2")) {
                    datos[1] = "Tarjeta de Identidad";
                } else {
                    datos[1] = "Otro"; // En caso de que haya otro tipo de documento
                }
                datos[2] = rs.getString(12);
                datos[3] = rs.getString(3);
                datos[4] = rs.getString(4);
                datos[5] = rs.getString(5);
                datos[6] = rs.getString(6);
                datos[7] = rs.getString(7);
                datos[8] = rs.getString(8);
                datos[9] = rs.getString(9);
                datos[10] = rs.getString(10);
                datos[11] = rs.getString(11);
                model.addRow(datos);
            }

            rs.close();
            st.close();
            conexion.close(); // Cierra la conexi√≥n despu√©s de usarla.

            tblvisor.setModel(model); // Mueve la asignaci√≥n aqu√≠ despu√©s de llenar los datos.

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error: " + e.toString());
        }
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VistaUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VistaUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VistaUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VistaUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VistaUsuarios().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btnClientes;
    private javax.swing.JButton btnagencias;
    private javax.swing.JButton btnagregar;
    private javax.swing.JButton btnagregar1;
    private javax.swing.JButton btncompanias;
    private javax.swing.JButton btnmedios;
    private javax.swing.JButton btnoperadores;
    private javax.swing.JButton btnpaquetes;
    private javax.swing.JButton btnpromotores;
    private javax.swing.JButton btnquitar;
    private javax.swing.JButton btntipomedios;
    private javax.swing.JButton btntipotransporte;
    public javax.swing.JButton btnvehiculos;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTable tblvisor;
    // End of variables declaration//GEN-END:variables
}
